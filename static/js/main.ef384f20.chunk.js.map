{"version":3,"sources":["App/App.styles.jsx","Section/Section.styles.jsx","Section/Section.jsx","FeedbackOptions/FeedbackOptions.styles.jsx","FeedbackOptions/FeedbackOptions.jsx","Statistics/Statistics.styles.jsx","Statistics/Statistics.jsx","App/App.jsx","index.js"],"names":["Container","styled","div","Notification","p","SectionContainer","SectionTitle","h2","Section","title","children","ButtonContainer","Button","button","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","StatisticsList","ul","StatisticsListItem","li","Statistics","values","total","positive","App","state","good","neutral","bad","totalFeedback","positiveFeedback","Math","round","feedback","setState","PrevState","Object","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEaA,EAAYC,IAAOC,IAAV,wJAQTC,EAAeF,IAAOG,EAAV,mECRZC,EAAmBJ,IAAOC,IAAV,8BAGhBI,EAAeL,IAAOM,GAAV,sE,OCWVC,I,IAAAA,EAZf,YAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACrB,OACI,eAACL,EAAD,WACI,cAACC,EAAD,UAAeG,IAAsBC,MCLpCC,EAAkBV,IAAOC,IAAV,kHAOfU,EAASX,IAAOY,OAAV,kVCUJC,I,IAAAA,EAff,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAChC,OACI,cAACL,EAAD,UACKI,EAAQE,KAAI,SAACC,GAAD,OACT,cAACN,EAAD,CAAQO,QAAS,kBAAKH,EAAgBE,IAAtC,SAA6DA,GAATA,SCNvDE,EAAiBnB,IAAOoB,GAAV,0BAEdC,EAAqBrB,IAAOsB,GAAV,iGCmBhBC,MAnBf,YAAyD,IAApCT,EAAmC,EAAnCA,QAASU,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACzC,OACI,eAACP,EAAD,WACKL,EAAQE,KAAI,SAACC,GAAD,OACT,eAACI,EAAD,WAAkCJ,EAAlC,KAA4CO,EAAOP,KAA1BA,MAE7B,eAACI,EAAD,WAAmC,QAAnC,KAA8CI,IAArB,SACzB,eAACJ,EAAD,WAAsC,oBAAtC,KAA6DK,EAA7D,MAAyB,gBCsCtBC,E,4MA1CbC,MAAQ,CACRC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGLC,cAAgB,WACd,MAA+B,EAAKJ,MACpC,OADA,EAAQC,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBE,iBAAmB,WACjB,IAAQJ,EAAS,EAAKD,MAAdC,KACFJ,EAAQ,EAAKO,gBACnB,OAAOE,KAAKC,MAAMN,EAAKJ,EAAM,M,EAG/BV,gBAAkB,SAACqB,GACjB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAWE,EAAUF,GAAY,O,4CAItC,WACE,IAAMtB,EAAUyB,OAAOC,KAAKC,KAAKb,OAC3BJ,EAASiB,KAAKb,MACdH,EAAQgB,KAAKT,gBACbN,EAAWe,KAAKR,mBAEtB,OACE,eAAClC,EAAD,WACC,cAAC,EAAD,CAASS,MAAO,wBAAhB,SACG,cAAC,EAAD,CAAiBM,QAASA,EAASC,gBAAiB0B,KAAK1B,oBAE3D,cAAC,EAAD,CAASP,MAAO,aAAhB,SACa,IAAViB,EAAc,cAAC,EAAD,CAAYX,QAASA,EAASU,OAAQA,EAAQC,MAAOA,EAAOC,SAAUA,IAAe,cAACxB,EAAD,UAAe,+B,GApC3GwC,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ef384f20.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\nwidth: 600px;\nbackground: #FFFFFF;\nbox-shadow: 0px 4px 10px rgba(55, 19, 187, 0.25);\nmargin: 20px auto;\npadding: 25px;\n`;\n\nexport const Notification = styled.p`\nfont-size: 20px;\ntext-align: center;\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const SectionContainer = styled.div`\r\n\r\n`;\r\nexport const SectionTitle = styled.h2`\r\ntext-align:center;\r\nmargin-bottom: 25px;\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SectionContainer, SectionTitle } from \"./Section.styles\";\r\n\r\nfunction Section({title, children}) {\r\n    return (\r\n        <SectionContainer>\r\n            <SectionTitle>{title}</SectionTitle>{children}</SectionContainer>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ButtonContainer = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nmargin-bottom: 25px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\ncursor: pointer;\r\n\r\nfont-size: 20px;\r\nfont-weight: bold;\r\ntext-transform: capitalize;\r\n\r\nborder: none;\r\nborder-radius: 4px;\r\nbackground-color: lightblue;\r\nbox-shadow: 0px 1px 4px rgba(55, 19, 187, 0.25);\r\n\r\nwidth: 150px;\r\npadding-top: 5px;\r\npadding-bottom: 5px;\r\n\r\n&:not(:last-child){\r\nmargin-right: 15px;\r\n}\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, ButtonContainer } from \"./FeedbackOptions.styles\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n    return (\r\n        <ButtonContainer>\r\n            {options.map((option) => (\r\n                <Button onClick={()=> onLeaveFeedback(option)} key={option}>{option}</Button>\r\n            ))}\r\n        </ButtonContainer>\r\n    );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string),\r\n    onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const StatisticsList = styled.ul``;\r\n\r\nexport const StatisticsListItem = styled.li`\r\nfont-size: 20px;\r\ntext-transform: capitalize;\r\nmargin-bottom: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { StatisticsList, StatisticsListItem} from \"./Statistics.styles\";\r\n\r\nfunction Statistics({options, values, total, positive}) {\r\n    return (\r\n        <StatisticsList>\r\n            {options.map((option) => (\r\n                <StatisticsListItem key={option}>{option}: {values[option]}</StatisticsListItem>\r\n            ))}\r\n            <StatisticsListItem key={\"total\"}>{\"Total\"}: {total}</StatisticsListItem>\r\n            <StatisticsListItem key={\"positive\"}>{\"Positive feedback\"}: {positive}%</StatisticsListItem>\r\n        </StatisticsList>\r\n    );\r\n}\r\n\r\nStatistics.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string),\r\n    values: PropTypes.object,\r\n    total: PropTypes.number,\r\n    positive: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\nimport { Container, Notification } from \"./App.styles\";\nimport Section from \"../Section/Section\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"../Statistics/Statistics\";\n\nclass App extends Component {\n  state = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  }\n\n  totalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  positiveFeedback = () => {\n    const { good } = this.state;\n    const total = this.totalFeedback();\n    return Math.round(good/total*100);\n  }\n\n  onLeaveFeedback = (feedback) => {\n    this.setState(PrevState => ({\n      [feedback]: PrevState[feedback] + 1,\n    }));\n  }\n  \n  render() {\n    const options = Object.keys(this.state);\n    const values = this.state;\n    const total = this.totalFeedback();\n    const positive = this.positiveFeedback();\n    \n    return (\n      <Container>\n       <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions options={options} onLeaveFeedback={this.onLeaveFeedback}></FeedbackOptions>\n       </Section>\n        <Section title={\"Statistics\"}>\n          {total !== 0 ? <Statistics options={options} values={values} total={total} positive={positive} /> : <Notification>{\"No feedback given\"}</Notification>}\n       </Section>\n     </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}